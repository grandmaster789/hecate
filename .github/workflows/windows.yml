name: Windows CI

on: [push, pull_request]

env:
  hecate_build_type: "Release"
  hecate_vulkan_version: "1.2.189.0"
  hecate_vulkan_sdk: "$GITHUB_WORKSPACE/../vulkan_sdk/"

jobs:
  windows:
    name: ${{ matrix.config.name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows MSVC",
            artifact: "windows-msvc.zip",
            cc: "cl", 
            cxx: "cl"
          }

    steps:
    - name: Setup python, conan, ninja
      shell: pwsh
      run: |
        pip3 install wheel setuptools
        pip3 install conan
        choco install ninja

    - name: Install Vulkan SDK
      shell: pwsh
      run: |
        curl -LS -o vulkansdk.exe `
            https://sdk.lunarg.com/sdk/download/${{ env.hecate_vulkan_version }}/windows/VulkanSDK-${{ env.hecate_vulkan_version }}-Installer.exe?Human=true

          7z x vulkansdk.exe -o"${{ env.hecate_vulkan_sdk }}"

    - name: Checkout this repository
      uses: actions/checkout@v3

    - name: Setup CMake
      shell: pwsh
      run: |
        $env:CC="${{ matrix.config.cc }}"
        $env:CXX="${{ matrix.config.cxx }}"
        $env:Path += ";${{ env.hecate_vulkan_sdk }}\;${{ env.hecate_vulkan_sdk }}\Bin\"

        # conan configuration
        conan profile new default --detect --force
        conan profile update settings.compiler="Visual Studio" default
        conan profile update settings.compiler.version=17 default

        # cmake project
        cmake . `
          -Bbuild `
          -DCMAKE_BUILD_TYPE=${{ env.hecate_build_type }} `
          -G "Visual Studio 17 2022" `
          -A x64

    - name: Build
      shell: pwsh
      run: |
        cmake --build build --config Release

    - name: Zip artifact
      shell: pwsh
      run: |
        7z a -tzip ${{ matrix.config.artifact }} build/*

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}
